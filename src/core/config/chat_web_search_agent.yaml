# =================================================================
# KaFlow-Py 聊天机器人模版 (MCP 集成版本)
# 基于 KaFlow-Py 协议标准的智能聊天机器人模版，集成 MCP 外部工具服务
# =================================================================

id: 3

# =================================================================
# 协议版本与元信息
# =================================================================
protocol:
  name: "智能搜索助手"
  version: "1.0.0"
  schema_version: "2025.09.10"
  description: "智能搜索助手，可以进行网络搜索，并返回搜索结果"
  author: "DevYK"
  license: "MIT"

# =================================================================
# 全局配置
# =================================================================
global_config:
  # 运行时配置
  runtime:
    timeout: 180
    max_retries: 3
    parallel_limit: 2
    debug_mode: false
    trace_enabled: true
    checkpoint_enabled: true

  # 日志配置
  logging:
    level: "INFO"
    format: "json"
    output: "stdout"
    file_path: "./logs/chat_agent_mcp.log"
    max_size: "50MB"
    max_files: 5

  # 内存配置
  # 记忆存储配置
  memory:                                    # 记忆存储配置 (可选)
    enabled: true                            # 启用记忆存储 (可选)
    provider: "mongodb"                      # 存储提供商: memory|redis|postgresql|mongodb|sqlite (可选)
    connection:                              # 连接配置 (可选)
      host: "10.1.16.4"                      # 主机地址 (可选)
      port: 27017                            # MongoDB 端口号 (默认 27017)
      database: "kaflow"                     # 数据库 db 名称 (可选)
      collection: "checkpoints"              # 集合名称 (可选，默认 checkpoints)
      username: "test"                           # 用户名 (可选)
      password: "${MEMORY_PASSWORD}"         # 密码 (可选，支持环境变量)
      auth_source: "paidb"                   # 认证数据库 (可选，默认 admin)

# =================================================================
# Agent 配置 (符合 agent_schema.base_structure)
# =================================================================
agents:
  web_search_agent:
    name: "web_search_agent"                  # Agent 名称
    type: "react_agent"                          # Agent 类型，使用 ReAct 支持工具
    description: "智能搜索助手，可以进行网络搜索，并返回搜索结果"
    enabled: true                                # 是否启用
    
    system_prompt: |                             # 系统提示词
      你是一个专业的智能搜索助手 🔍，具备强大的网络搜索和信息整理能力！
      
      **核心能力**：
      1. 🌐 使用 web_search 工具进行精准的网络搜索
      2. 📊 智能解析和筛选搜索结果
      3. 💡 提供结构化、易理解的信息总结
      4. 🎯 根据用户需求提供针对性的搜索策略
      
      **搜索策略**：
      - 理解用户的真实需求，优化搜索关键词
      - 从多个角度搜索，确保信息的全面性
      - 优先提供最新、最权威的信息源
      - 对搜索结果进行去重和质量筛选
      
      **信息呈现**：
      - 📋 结构化展示搜索结果（标题、摘要、来源）
      - 🔗 提供原始链接供用户深入了解
      - 📈 突出关键信息和数据
      - 🏷️ 标注信息的时效性和可靠性
      
      **交互风格**：
      - 友好专业，像资深研究员一样提供帮助
      - 主动询问细节，确保搜索方向准确
      - 如果搜索结果不理想，主动建议优化搜索策略
      - 提供相关的延伸搜索建议
      
      **工具使用说明**：
      - web_search: 执行网络搜索
        参数：
        query: 搜索查询关键词
        max_results: 返回的最大结果数量，默认为 10
        示例：web_search(query="2024年人工智能发展趋势", max_results=10, search_type="general")

      **注意事项**：
      - 始终验证信息的准确性和时效性
      - 对于敏感话题，提供多方观点
      - 如果搜索无结果，建议调整搜索策略
      - 保持客观中立，避免偏见
      
      让我们一起探索知识的海洋，为你找到最有价值的信息！✨
    
    llm:                                         # Agent 专用 LLM 配置
      provider: "deepseek"
      base_url: "https://api.ppinfra.com/v3/openai"
      api_key: "${DEEPSEEK_API_KEY}"
      model: "deepseek/deepseek-v3-0324"
      temperature: 0.3
      max_tokens: 4096
      timeout: 60
      
    tools: 
      - name: "web_search"  # 网络搜索工具
        type: "web_search"  # 特殊标记，表示使用 web_search tool
        description: "使用网络搜索工具进行网络搜索"
        config:
          max_results: 5  # 返回的最大结果数量
          search_type: "general"  # 搜索类型，可选值为 "general" 或 "news"
    
    mcp_servers: []                                 # MCP 服务器配置

# =================================================================
# 工作流配置 (符合 workflow_schema.base_config)
# =================================================================
workflow:
  name: "智能 MCP 聊天机器人工作流"
  version: "1.0.0"
  description: "集成 MCP 外部工具服务的聊天机器人，支持远程命令执行等功能"
  author: "DevYK"
  schema_version: "2025.09.10"
  
  settings:
    timeout: 180
    max_retries: 3
    debug_mode: false

  # =================================================================
  # 节点定义 (符合 node_schema.base_structure)
  # =================================================================
  nodes:
    - name: "start_node"
      type: "start"
      description: "工作流开始节点"
      position:
        x: 100
        y: 100
      outputs:
        - name: "user_input"
          type: "string"
          description: "用户输入内容"

    - name: "web_search_agent"
      type: "agent"
      description: "智能聊天机器人 Agent (集成 MCP)"
      agent_ref: "web_search_agent"  # 引用 agents 配置段中的 web_search_agent
      position:
        x: 300
        y: 100
      
      inputs:
        - name: "user_message"
          type: "string"
          required: true
          source: "start_node.user_input"
          description: "用户输入的消息"
        - name: "thread_id"
          type: "string"
          required: false
          description: "对话线程ID，用于记忆管理"
      
      outputs:
        - name: "response"
          type: "string"
          description: "AI助手的回复"
        - name: "mcp_results"
          type: "array"
          description: "MCP 工具执行结果列表"
        - name: "confidence"
          type: "number"
          description: "回答的置信度"

    - name: "end_node"
      type: "end"
      description: "工作流结束节点"
      position:
        x: 500
        y: 100
      inputs:
        - name: "final_response"
          type: "string"
          required: true
          source: "web_search_agent.response"
          description: "最终回复内容"
        - name: "mcp_results"
          type: "array"
          required: false
          source: "web_search_agent.mcp_results"
          description: "MCP 工具执行结果"

  # =================================================================
  # 边定义 (符合 edge_schema.base_structure)
  # =================================================================
  edges:
    - from: "start_node"
      to: "web_search_agent"
      description: "传递用户输入到智能聊天Agent"
      
    - from: "web_search_agent"
      to: "end_node"
      description: "输出最终回复和 MCP 执行结果"
